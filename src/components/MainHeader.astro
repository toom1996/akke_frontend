---
const nav = [
    {
        label:"秀场",
        url: 'show',
        child: [
            {
                label: '时装发布会1',
                items: [{label: '法国时装周',url: '/show?a=1234'},{label: '米兰时装周',url: '/show?a=1234'}]
            },
            {
                label: '时装发布会2',
                items: [
                    {
                        label: '法国时装周',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周',
                        url: '/show?a=1234'
                    }
                ]
            },
            {
                label: '时装发布会3',
                items: [
                    {
                        label: '法国时装周',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周',
                        url: '/show?a=1234'
                    }
                ]
            }
        ]
    },{
        label:"发现",
        url: 'find',
        child: [ {
                label: '时装发布会',
                items: [
                    {
                        label: '法国时装周!!',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周!!',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周!!',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周!!',
                        url: '/show?a=1234'
                    },
                    {
                        label: '米兰时装周!!',
                        url: '/show?a=1234'
                    }
                ]
            }]
    },{
        label:"聘请",
        url: '/show',
        child: []
    },{
        label:"资源",
        url: '/show',
        child: []
    },{
        label:"职位",
        url: '/show',
        child: []
    }
];

import IconLogo from '@/assets/icons/IconLogo.vue'
---

<style>
    .main-nav {
        @apply h-28 backdrop-blur-[2rem];
    }

    .drop-menu-container {
        /* @apply pb-12; */
        background: transparent;
        /* display: none; */
        opacity:0;
        left: 0;
        padding-block-start: 3rem;
        position: absolute;
        right: 0;
        top: calc(7.25rem - 2.125rem);
        transition: all .3s ease;
        z-index: 1;
    }

    .drop-menu-container[aria-expanded = "true"] {
        opacity:1;
    }

    .drop-menu-container[aria-expanded = "false"] {
        visibility: hidden;
    }

    .drop-mask {
        background-color: #000000b3;
        height: 100vh;
        /* pointer-events: none; */
        inset: 0;
        isolation: isolate;
        opacity: 0;
        /* pointer-events: none; */
        position: fixed;
        top: var(--header-container-height);
        transition: all .3s ease;
        width: 100%;
        z-index: -1;
    }
    
</style>
<gogoex-header class="z-50 fixed w-full top-0" transition:persist>
    <!-- <astro-heart>
        <button aria-label="Heart">💜</button> × <span>0</span>
      </astro-heart> -->
    <div id="dropOverlay" class="drop-mask"></div>
    <div id="dropBackground" class="drop-background absolute right-0 top-0 left-0 h-0 block w-full z-0 bg-white transition-all"></div>
    <div class="main-nav flex px-6">
        <ul class="flex h-full items-center mr-auto">
            <a href="/" class="flex items-center justify-center font-bold cursor-pointer text-lg"><IconLogo />GogoEx</a>
            {
                nav.map((item) => (
                    <li class="m-4 text-lg">
                        <a id={item.child.length > 0 ? 'drop-' + item.url : ''} href={item.child.length > 0 ? 'javascript:void(0);' : item.url}>
                            <span class="font-semibold">{item.label}</span>
                        </a>
                        {
                            item.child.length > 0 ?
                            <div id={item.child.length > 0 ? 'dropMenuContainer__drop-' + item.url : ''} class="drop-menu-container flex justify-center" aria-expanded="false">
                                {
                                    item.child.map((itemChild) => (
                                        <div class=" astro-FAS2F7R5">
                                            <div role="group" aria-labelledby="mm-users" class="col astro-FAS2F7R5">
                                                <h2 id="mm-users" class="c-body-text c-body-text--caption u-mb-medium-3 c-body-text--grey-600 col-head astro-FAS2F7R5 astro-N2675GOD">{itemChild.label}</h2>
                                                {
                                                    itemChild.items.map((v) => (
                                                        <p class="text-xl font-bold">{ v.label }</p>
                                                    ))
                                                }
                                            </div>
                                        </div>
                                    )) 
                                }
                            </div>
                            : ''
                        }
                    </li>
                ))
            }
        </ul>
        <!-- <div class="sign-wrapper flex">
            <ul class="PrimaryNav-loggedOutOptions-ZwH flex items-center">
                <li class="PrimaryNav-loggedOutOption-OP6 PrimaryNav-logIn-td1">
                    <a href="/login" class="btn-dark px-3 py-2  lg:px-4 text-sm transition border border-slate-900 font-medium mr-2">登录</a>
                </li>
                <li class="PrimaryNav-loggedOutOption-OP6">
                    <a href="/detail" class="btn-light px-3 py-2  lg:px-4 text-sm transition hover:bg-slate-800 border border-slate-300 font-mediummr-2">注册</a>
                </li>
            </ul>
        </div> -->
</gogoex-header>
<script>
    class Gogoex extends HTMLElement {
    constructor() {
      super();
      let count = 0;

      // 遮罩
    var dropOverlayEl = document.getElementById('dropOverlay');
            
            // 菜单背景
            var dropBackgroundEl = document.getElementById('dropBackground');
        
            document.addEventListener('astro:before-preparation', () => {
                let currentIsDropedMenuEl =  document.getElementById(currentIsDropedMenuId);
                                currentIsDropedMenuEl?.setAttribute('aria-expanded', 'false')
                                __setOpacity([dropBackgroundEl, dropOverlayEl, ], '0')
                console.log('astro:before')
            // document.querySelector('#loading').classList.add('show');
          });
          document.addEventListener('astro:after-preparation', () => {
            console.log('astro:after')
            // document.querySelector('#loading').classList.remove('show');
          });
        
          var ov = document.getElementById('dropOverlay');
          console.log(ov)
          if (ov) {
            let v = ov?.addEventListener('click', function () {
            console.log(currentIsDropedMenuId)
            document.getElementById(currentIsDropedMenuId)?.setAttribute('aria-expanded', 'false')
            __setOpacity([dropBackgroundEl, dropOverlayEl], '0')
          })
        
          console.log(v)
          }
        
            // document.getElementById('dropOverlay')?.addEventListener('click', function () {
            //     console.log(1231232)
            // })
            var currentIsDropedMenuId = ''
            var dropButton = document.querySelectorAll('[id^="drop-"]');
            console.log(dropButton)
            dropButton.forEach(function (button) {
                console.log(button.id)
                button.addEventListener('click', function () {
                    let currentDropedMenuId = 'dropMenuContainer__' + button.id
        
                    // 当前菜单的下拉菜单
                    var dropMenuEl = document.getElementById(currentDropedMenuId);
        
                    if (dropMenuEl) {
                        if (dropMenuEl.getAttribute('aria-expanded') == 'false') {
                            dropMenuEl.setAttribute('aria-expanded', 'true');
                            dropBackgroundEl ? dropBackgroundEl.style.height = `${dropMenuEl.offsetHeight + 128}px` : ''
                            __setOpacity([dropOverlayEl, dropBackgroundEl, ], '1')
        
                            if (currentIsDropedMenuId && currentIsDropedMenuId !== currentDropedMenuId) {
                                let currentIsDropedMenuEl =  document.getElementById(currentIsDropedMenuId);
                                currentIsDropedMenuEl?.setAttribute('aria-expanded', 'false')
                            }
        
                            // 记录当前哪个是打开的
                            currentIsDropedMenuId = currentDropedMenuId
                            console.log(currentDropedMenuId)
                        } else {
                            dropMenuEl.setAttribute('aria-expanded', 'false')
                            __setOpacity([dropBackgroundEl, dropOverlayEl, ], '0')
                            dropBackgroundEl ? dropBackgroundEl.style.height = '0' : ''
                        }
                    }
                    
                    document.querySelectorAll("[aria-expanded='true']")
                    // 其他操作...
                }, true);
            })
        
            function __setOpacity(el: Array<HTMLElement | null>, opacityVal: string = '0') {
                el.forEach((e) => {
                    if (e) {
                        e.style.opacity = opacityVal;
                        let visibilityVal = opacityVal == '0' ? 'hidden' : 'unset';
                        e.style.visibility = visibilityVal;
                    }
                });
            }
    }
  }
  customElements.define('gogoex-header', Gogoex);
//      // 为我们的新 HTML 自定义元素定义行为。
//   class AstroHeart extends HTMLElement {
//     constructor() {
//       super();
//       let count = 0;

//       const heartButton = this.querySelector('button');
//       const countSpan = this.querySelector('span');

//         if (heartButton) {
//             // 每次单击按钮时，更新计数。
//             heartButton.addEventListener('click', () => {
//                 count++;
//                 if (countSpan) {
//                     countSpan.textContent = count.toString();
//                 }
//             });
//         }
//     }
//   }

//   // 告诉浏览器将我们的 AstroHeart 类用于 <astro-heart> 元素。
//   customElements.define('astro-heart', AstroHeart);
//   customElements.define('gogoex-header', Nav);
    
</script>