---
const nav = [
    {
        label:"秀场",
        url: 'show',
        child: [
            {
                label: '时装发布会',
                items: [
                    {
                        label: '法国时装周',
                        url: '/show?a=1234'
                    }
                ]
            }
        ]
    },{
        label:"发现",
        url: '/show',
        child: []
    },{
        label:"聘请",
        url: '/show',
        child: []
    },{
        label:"资源",
        url: '/show',
        child: []
    },{
        label:"职位",
        url: '/show',
        child: []
    }
];

import IconLogo from '@/assets/icons/IconLogo.vue'
---

<style>
    .main-nav {
        @apply h-28 backdrop-blur-[2rem];
    }

    .drop-menu-container {
        @apply pb-12;
        background: transparent;
        display: none;
        left: 0;
        padding-block-start: 3rem;
        position: absolute;
        right: 0;
        top: calc(7.25rem - 2.125rem);
        z-index: 1;
    }

    .drop-mask {
        background-color: #000000b3;
        height: 100vh;
        inset: 0;
        isolation: isolate;
        opacity: 0;
        pointer-events: none;
        position: fixed;
        top: var(--header-container-height);
        transition: all .5s ease;
        width: 100%;
        z-index: -1;
    }
</style>
<gogoex-header class="z-50 fixed w-full top-0" transition:persist>
    <astro-heart>
        <button aria-label="Heart">💜</button> × <span>0</span>
      </astro-heart>
    <div class="drop-mask"></div>
    <div class="main-nav flex px-6">
        <ul class="flex h-full items-center mr-auto">
            <a href="/" class="flex items-center justify-center font-bold cursor-pointer text-lg"><IconLogo />GogoEx</a>
            {
                nav.map((item) => (
                    <li class="m-4">
                        <a id={item.child.length > 0 ? 'drop-' + item.url : ''} href={item.child.length > 0 ? 'javascript:void(0);' : item.url}>
                            <span class="font-semibold">{item.label}</span>
                        </a>
                        {
                            item.child.length > 0 ?
                            item.child.map((childItem) => (
                                <div id="dropMenuContainer" class="drop-menu-container" aria-expanded="false" style="display: block;">
                                    <div class="c-megamenu__droplet-wrapper astro-FAS2F7R5 flex justify-center">
                                        <div class="c-megamenu__droplet-inner astro-FAS2F7R5" style="opacity: 1;">
                                            <div class=" astro-FAS2F7R5">
                                                <div role="group" aria-labelledby="mm-users" class="col astro-FAS2F7R5">
                                                    <h2 id="mm-users" class="c-body-text c-body-text--caption u-mb-medium-3 c-body-text--grey-600 col-head astro-FAS2F7R5 astro-N2675GOD">{childItem.label}</h2>
                                                    <ul class="astro-FAS2F7R5">
                                                        <li class="astro-FAS2F7R5">
                                                            <a class="kui-button kui-button--uncontained kui-button--full-width kui-button--align-left astro-N7IEXIQW" href="/authentication/">
                                                                <span class="kui-button__inner astro-N7IEXIQW">
                                                                    {
                                                                        childItem.items.map((v) => (
                                                                            <span class="kui-button__label astro-N7IEXIQW">{ v.label }</span>
                                                                        ))
                                                                    }
                                                                </span>
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            )) : ''
                        }
                    </li>
                ))
            }
        </ul>
        <div class="sign-wrapper flex">
            <ul class="PrimaryNav-loggedOutOptions-ZwH flex items-center">
                <li class="PrimaryNav-loggedOutOption-OP6 PrimaryNav-logIn-td1">
                    <a href="/login" class="btn-dark px-3 py-2  lg:px-4 text-sm transition border border-slate-900 font-medium mr-2">登录</a>
                </li>
                <li class="PrimaryNav-loggedOutOption-OP6">
                    <a href="/detail" class="btn-light px-3 py-2  lg:px-4 text-sm transition hover:bg-slate-800 border border-slate-300 font-mediummr-2">注册</a>
                </li>
            </ul>
    </div>
</gogoex-header>
<script>
    var dropButton = document.querySelectorAll('[id^="drop-"]');
      console.log(dropButton)
        dropButton.forEach(function (button) {
            button.addEventListener('click', function () {
                var container = document.getElementById('dropMenuContainer');
                if (container) {
                    if (container.getAttribute('aria-expanded') == 'false') {
                    container.setAttribute('aria-expanded', 'true');
                    container.style.display = 'none';
                } else {
                    container.setAttribute('aria-expanded', 'false')
                    container.style.display = 'block';
                }
                }
                console.log("按钮被点击了！");
                // 其他操作...
            }, true);
        })
    class Nav extends HTMLElement {
    constructor() {
      super();
      let count = 0;

      var dropButton = document.querySelectorAll('[id^="drop-"]');
      console.log(dropButton)
        dropButton.forEach(function (button) {
            // button.addEventListener('click', function () {
            //     console.log("按钮被点击了！");
            //     // 其他操作...
            // }, true);
        })
    }
  }

     // 为我们的新 HTML 自定义元素定义行为。
  class AstroHeart extends HTMLElement {
    constructor() {
      super();
      let count = 0;

      const heartButton = this.querySelector('button');
      const countSpan = this.querySelector('span');

        if (heartButton) {
            // 每次单击按钮时，更新计数。
            heartButton.addEventListener('click', () => {
                count++;
                if (countSpan) {
                    countSpan.textContent = count.toString();
                }
            });
        }
    }
  }

  // 告诉浏览器将我们的 AstroHeart 类用于 <astro-heart> 元素。
  customElements.define('astro-heart', AstroHeart);
//   customElements.define('gogoex-header', Nav);
    
</script>